[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mvn-simulator"
description = 'Functional simulator of a simplified von Neumann stack-based architecture'
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "Miguel Sarraf Ferreira Santucci", email = "miguel.sarraf@usp.br" },
  { name = "tomaz-suller", email = "tomaz.suller@usp.br" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "python-dotenv",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/tomaz-suller/MVN#readme"
Issues = "https://github.com/tomaz-suller/MVN/issues"
Source = "https://github.com/tomaz-suller/MVN"

[tool.hatch.version]
path = "src/mvn_simulator/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pylint",
  "flake8",
  "black",
  "isort",
]
[tool.hatch.envs.default.scripts]
lint = [
  "flake8 src tests",
  "pylint src tests",
]
check = [
  "black --check --diff src tests",
  "isort --check-only --diff src tests",
  "lint",
]
fmt = [
  "isort src tests",
  "black src tests",
]

[tool.hatch.envs.test]
dependencies = [
  "coverage[toml]",
  "pytest",
  "pytest-cov",
]
[tool.hatch.envs.test.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/mvn_simulator --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.basic]
good-names = ["i", "j", "k", "a", "b", "_"]

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/mvn_simulator/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
